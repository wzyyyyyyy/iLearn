<ui:FluentWindow  
    x:Class="iLearn.Views.Windows.LoginWindow"  
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"  
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"  
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"  
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"  
    xmlns:viewmodels="clr-namespace:iLearn.ViewModels.Windows"  
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"  
    mc:Ignorable="d"  
    Width="420"  
    Height="600"  
    WindowStartupLocation="CenterScreen"  
    WindowCornerPreference="Round"  
    ExtendsContentIntoTitleBar="True"  
    WindowBackdropType="Mica"  
    ResizeMode="NoResize"  
    Loaded="Window_Loaded"  
    d:DataContext="{d:DesignInstance Type=viewmodels:LoginViewModel, IsDesignTimeCreatable=True}">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="KeyDown">
            <i:InvokeCommandAction Command="{Binding KeyPressCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <!-- 动画资源 -->
        <Storyboard x:Key="CardLoadStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.3"/>
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"   
                             From="30" To="0" Duration="0:0:0.8">
                <DoubleAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
    </Window.Resources>

    <Grid>
        <ui:TitleBar  
            VerticalAlignment="Top"  
            Margin="0,0,0,0" />

        <Rectangle Fill="#0078D4" Opacity="0.05"   
                   RadiusX="20" RadiusY="20" Margin="0,0,0,280"/>

        <Grid Margin="0,32,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <StackPanel Grid.Row="0" VerticalAlignment="Center" x:Name="HeaderPanel" Opacity="0">
                <StackPanel.RenderTransform>
                    <TranslateTransform Y="0"/>
                </StackPanel.RenderTransform>

                <ui:ImageIcon Source="pack://application:,,,/Assets/iLearn.png"  
                              Width="80" Height="80" HorizontalAlignment="Center" Margin="0,0,0,16"/>
                <TextBlock Text="{Binding WindowTitle}"   
                           FontSize="28"   
                           FontWeight="SemiBold"   
                           HorizontalAlignment="Center"  
                           Margin="0,0,0,8"/>
                <TextBlock Text="请登录您的账户"   
                           FontSize="13"   
                           Opacity="0.8"  
                           Foreground="{ui:ThemeResource TextFillColorSecondaryBrush}"  
                           HorizontalAlignment="Center"  
                           Margin="0,0,0,16"/>
            </StackPanel>

            <ui:Card Grid.Row="1" Margin="32,0,32,20"   
                     Background="{ui:ThemeResource CardBackgroundFillColorDefaultBrush}"  
                     BorderBrush="{ui:ThemeResource ControlStrokeColorDefaultBrush}"  
                     BorderThickness="1" x:Name="LoginCard" Opacity="0"
                     IsEnabled="{Binding IsLoggingIn, Converter={StaticResource InverseBooleanConverter}}">
                <ui:Card.RenderTransform>
                    <TranslateTransform Y="0"/>
                </ui:Card.RenderTransform>

                <StackPanel Margin="28,28,28,24">
                    <ui:TextBox x:Name="UsernameTextBox"  
                           PlaceholderText="请输入用户名"  
                           Text="{Binding UserName, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  
                           Margin="0,0,0,16"  
                           Cursor="IBeam"
                           Validation.ErrorTemplate="{x:Null}">
                        <ui:TextBox.Icon>
                            <ui:SymbolIcon Symbol="Person24" Filled="True" />
                        </ui:TextBox.Icon>
                    </ui:TextBox>

                    <ui:PasswordBox x:Name="PasswordBox"   
                PlaceholderText="请输入密码"  
                Password="{Binding UserPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"  
                Margin="0,0,0,6"
                Validation.ErrorTemplate="{x:Null}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="KeyDown">
                                <i:InvokeCommandAction Command="{Binding KeyPressCommand}" PassEventArgsToCommand="True"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ui:PasswordBox.Icon>
                            <ui:SymbolIcon Symbol="Password24" Filled="True" />
                        </ui:PasswordBox.Icon>
                    </ui:PasswordBox>

                    <Grid Margin="0,0,0,20">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <CheckBox Grid.Column="0" Content="记住我" IsChecked="{Binding IsRememberMeEnabled}">
                            <CheckBox.ToolTip>
                                <ToolTip Content="下次登录时自动填充用户名"/>
                            </CheckBox.ToolTip>
                        </CheckBox>

                        <CheckBox Grid.Column="1" Content="自动登录" IsChecked="{Binding IsAutoLoginEnabled}" Margin="15,0,0,0">
                            <CheckBox.ToolTip>
                                <ToolTip Content="下次启动应用时自动登录" Cursor=""/>
                            </CheckBox.ToolTip>
                        </CheckBox>
                    </Grid>

                    <!-- 登录按钮 -->
                    <ui:Button x:Name="LoginButton"  
                               Content="登 录"  
                               Appearance="Primary"  
                               Command="{Binding LoginCommand}"  
                               Height="42" HorizontalAlignment="Stretch"  
                               FontSize="14" FontWeight="Medium" Margin="0,8,0,0">
                        <ui:Button.Resources>
                            <ResourceDictionary>
                                <SolidColorBrush x:Key="ButtonBackgroundPointerOver" Color="#0069BF"/>
                                <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="#005CA6"/>
                            </ResourceDictionary>
                        </ui:Button.Resources>
                        <ui:Button.Style>
                            <Style TargetType="ui:Button" BasedOn="{StaticResource {x:Type ui:Button}}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="RenderTransform">
                                            <Setter.Value>
                                                <ScaleTransform ScaleX="1.02" ScaleY="1.02"/>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Effect">
                                            <Setter.Value>
                                                <DropShadowEffect ShadowDepth="1" BlurRadius="8" Opacity="0.3" Color="#0078D4"/>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                                <Setter Property="Background" Value="#0078D4"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Style>
                        </ui:Button.Style>
                    </ui:Button>

                    <Border Margin="0,20,0,0" Height="1" Background="{ui:ThemeResource ControlStrokeColorDefaultBrush}" Opacity="0.5"/>

                    <!-- 底部链接 -->
                    <TextBlock HorizontalAlignment="Center" Margin="0,0,0,0">
                        <Hyperlink NavigateUri="https://ilearntec.jlu.edu.cn/" RequestNavigate="Hyperlink_RequestNavigate" 
                                  Foreground="{ui:ThemeResource AccentTextFillColorPrimaryBrush}">
                        跳转官网
                        <Hyperlink.ToolTip>
                            <ToolTip Content="跳转学在吉大"/>
                         </Hyperlink.ToolTip>
                         </Hyperlink>
                    </TextBlock>
                </StackPanel>
            </ui:Card>

            <Grid x:Name="ProgressOverlay" 
                  Grid.Row="0" Grid.RowSpan="2" 
                  Visibility="{Binding IsAuthenticationInProgress, Converter={StaticResource BooleanToVisibilityConverter}}"
                  Panel.ZIndex="1000">
                <Grid.RenderTransformOrigin>0.5, 0.5</Grid.RenderTransformOrigin>
                <Grid.RenderTransform>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Grid.RenderTransform>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Opacity" Value="0"/>
                        <Style.Triggers>
                            <Trigger Property="Visibility" Value="Visible">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                From="0" To="1" Duration="0:0:0.3"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"   
                                                From="0.95" To="1" Duration="0:0:0.4">
                                                <DoubleAnimation.EasingFunction>
                                                    <BackEase EasingMode="EaseOut" Amplitude="0.2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"   
                                                From="0.95" To="1" Duration="0:0:0.4">
                                                <DoubleAnimation.EasingFunction>
                                                    <BackEase EasingMode="EaseOut" Amplitude="0.2"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                From="1" To="0" Duration="0:0:0.25"/>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"   
                                                From="1" To="0.95" Duration="0:0:0.3">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseIn"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"   
                                                From="1" To="0.95" Duration="0:0:0.3">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseIn"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>

                <!-- 高斯模糊 -->
                <Rectangle Fill="{ui:ThemeResource ApplicationBackgroundBrush}" 
            Opacity="0.8">
                    <Rectangle.Effect>
                        <BlurEffect KernelType="Gaussian" Radius="20" RenderingBias="Quality"/>
                    </Rectangle.Effect>
                </Rectangle>

                <Border Background="{ui:ThemeResource CardBackgroundFillColorDefaultBrush}"
                        BorderBrush="{ui:ThemeResource ControlStrokeColorDefaultBrush}"
                        BorderThickness="1"
                        CornerRadius="8"
                        Width="180" Height="120"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">
                    <Border.Effect>
                        <DropShadowEffect ShadowDepth="2" BlurRadius="15" Opacity="0.2"/>
                    </Border.Effect>

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <ui:ProgressRing Grid.Row="0"
                                         IsIndeterminate="True"
                                         Width="40" Height="40"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"/>

                        <TextBlock Grid.Row="1"
                                   Text="正在登录中..."
                                   HorizontalAlignment="Center"
                                   Margin="0,8,0,16"/>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
    </Grid>
</ui:FluentWindow>